<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>博客 on Calvin Haynes的博客站</title>
    <link>https://blog.calvinhaynes.top/posts/</link>
    <description>Recent content in 博客 on Calvin Haynes的博客站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>chx1006488386@163.com (Calvin Haynes)</managingEditor>
    <webMaster>chx1006488386@163.com (Calvin Haynes)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 30 Oct 2021 10:45:08 +0800</lastBuildDate>
    <sy:updatePeriod>daily</sy:updatePeriod>
    
        <atom:link href="https://blog.calvinhaynes.top/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      
      <item>
        <title>一个玩转国外CSLab的通用环境搭建方案（附我的搭建好的MIT6.S081环境）</title>
        <link>https://blog.calvinhaynes.top/posts/cslab/</link>
        <pubDate>Sat, 30 Oct 2021 10:45:08 +0800</pubDate>
        <author>chx1006488386@163.com (Calvin Haynes)</author>
        <atom:modified>Sat, 30 Oct 2021 10:45:08 +0800</atom:modified>
        <guid>https://blog.calvinhaynes.top/posts/cslab/</guid>
        <description>前言 自从学习了Docker，我就无处施展自己的才华了，突然想起之前学习MIT6.S081课程的时候环境搭建完后就一直在吃灰，再加上我突然联想</description>
        <content:encoded>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;自从学习了Docker，我就无处施展自己的才华了，突然想起之前学习MIT6.S081课程的时候环境搭建完后就一直在吃灰，再加上我突然联想到之前搭建的code-server（点&lt;a href=&#34;https://zhuanlan.zhihu.com/p/379632978&#34;&gt;这里&lt;/a&gt;），所以我突然有了个大胆的想法，搭建一个Docker的MIT6.S081实验环境，并且采用code-server的形式，达成一个开箱即用的效果，甚至可以挂到云服务器（阿里云学生机）上，实现随时随地使用code-server进行实验，有灵感的时候随时掏出IPAD或者手机就可以实验搞起，实在是太香了，而且以后其他CSLab也可以采用相似的方案，那么下面我们就开始吧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;没有了解过Docker的小伙伴我给出以下几个链接供大家学习和参考&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yeasy.gitbook.io/docker_practice/&#34;&gt;Docker从入门到实践文档（非常详尽）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL2WlOKghhsn0OR0zqmnqwHBlb5e0gwVK9&#34;&gt;油管视频列表（科学上网）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dockerfile参考文档
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfie&lt;/code&gt; 官方文档：https://docs.docker.com/engine/reference/builder/&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; 最佳实践文档：https://docs.docker.com/develop/develop-images/dockerfile_best-practices/&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Docker&lt;/code&gt; 官方镜像 &lt;code&gt;Dockerfile&lt;/code&gt;：https://github.com/docker-library/docs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;如何按需正确食用本文&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仅仅想直接使用我搭建好的环境的童鞋请直接移步到使用篇，利用Docker可以直接&lt;code&gt;pull&lt;/code&gt;我的&lt;code&gt;Regisry&lt;/code&gt;（环境比较大，国外服务器很慢，后面我会说其他解决方案），然后直接进行MIT6.S081的实验&lt;/li&gt;
&lt;li&gt;想学习Docker搭建环境的童鞋可以慢慢看环境搭建步骤&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;效果演示&#34;&gt;效果演示&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.5l840ak5vw00.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;环境搭建步骤&#34;&gt;环境搭建步骤&lt;/h2&gt;
&lt;p&gt;通过不断的尝试，我觉得这种方案可以作为做国外CSLab的通用方案，只要写好相应的&lt;code&gt;Dockerfile&lt;/code&gt;就可以了，code-server和其他一些常见的比如镜像源的设置、使用的linux发行版等等是通用的，这些保留，然后剩下的部分就专注于在&lt;code&gt;Dockerfile&lt;/code&gt;中搭建相应国外CSLab的环境就可以了，基于此思路，我们进行下面的搭建步骤。（下面一步步按照我的思路来走，之后你想搭建自己的其他实验环境，就按照这样思路向下进行就可以了）&lt;/p&gt;
&lt;h3 id=&#34;1---首先准备好各种搭建环境的工具&#34;&gt;1 - 首先准备好各种搭建环境的工具&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;首先我是Windows系统，所以下载了&lt;a href=&#34;https://www.docker.com/products/docker-desktop&#34;&gt;Docker Desktop&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简单配一些国内的&lt;code&gt;Docker Registry&lt;/code&gt;镜像源（点开设置中&lt;code&gt;Docker Engine&lt;/code&gt;就行了）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/Docker%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E8%AE%BE%E7%BD%AE.6eeiwtzqy180.png&#34; alt=&#34;Docker国内镜像设置&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;registry-mirrors&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://registry.docker-cn.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://hub-mirror.c.163.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://docker.mirrors.ustc.edu.cn&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://xzahxrmt.mirror.aliyuncs.com&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;insecure-registries&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[],&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;debug&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;experimental&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;features&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;buildkit&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;windows&lt;/code&gt;原生的命令行终端太拉了，所以下载他们新出的&lt;a href=&#34;https://www.microsoft.com/zh-cn/p/windows-terminal/9n0dx20hk701?activetab=pivot:overviewtab&#34;&gt;Windows Terminal&lt;/a&gt;，样子好看了不少，还能开多个&lt;code&gt;Tab&lt;/code&gt;标签，还能定制化样式，确实好用（附上&lt;code&gt;youtube&lt;/code&gt;上的&lt;a href=&#34;https://www.youtube.com/watch?v=235G6X5EAvM&amp;amp;t=462s&#34;&gt;美化教程&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/windows-terminal.uv30qstxow0.png&#34; alt=&#34;windows-terminal&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2---然后进行mit6s081环境搭建的调研和实践&#34;&gt;2 - 然后进行MIT6.S081环境搭建的调研和实践&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;首先肯定是官网的环境搭建说明书是第一位要看的：https://pdos.csail.mit.edu/6.828/2020/tools.html&lt;/li&gt;
&lt;li&gt;结果发现搭建问题很多，我使用的是&lt;code&gt;ubuntu20.04LTS&lt;/code&gt;，官方教程对应ubuntu的部分搭建起来一大堆问题。&lt;/li&gt;
&lt;li&gt;然后我就开始互联网冲浪寻找其他人分享的环境搭建的教程，自己先简单开个&lt;code&gt;Docker&lt;/code&gt;测试每个教程的环境搭建是否有效，最终结合多家教程和自己的思考，拿到了正确的环境配置方式，并写了对应的&lt;code&gt;Dockerfile&lt;/code&gt;，具体内容如下（没一步操作我都写好注释了，可以先看完上面的Docker从入门到实践中的&lt;a href=&#34;https://yeasy.gitbook.io/docker_practice/image/build&#34;&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;/a&gt;部分然后再看这里进行理解）：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; ubuntu:20.04&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ARG&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;arch_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;amd64

&lt;span class=&#34;c&#34;&gt;# 前几步因为针对本实验依赖不全的原因问题百出，所以放弃了，还是ubuntu20.04官方镜像源对于MIT6.S081所需依赖最全面&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 1.备份源列表&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# RUN cp /etc/apt/sources.list /etc/apt/sources.backup.list&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 2.把本目录下的sources.list中的镜像源添加到Docker中，下载速度起飞&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# COPY sources.list /etc/apt/sources.list&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 3.更新源&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# RUN apt-get update &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 创建一个mit6s081的用户和其home目录&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; useradd -m mit6s081 &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;root ALL=(ALL) NOPASSWD: ALL&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sudoers &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;mit6s081 ALL=(ALL) NOPASSWD: ALL&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sudoers &lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 设置一些环境变量&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ENV&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;TZ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Asia/Shanghai &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;LANG&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;en_US.utf8 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;LANGUAGE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;en_US.UTF-8 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;LC_ALL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;en_US.UTF-8 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;DEBIAN_FRONTEND&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;noninteractive&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# MIT6.S081 Lab所用依赖&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 1.安装RISC-V交叉编译工具和一些其他的常用工具&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; apt-get update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    apt-get install -y sudo locales git wget vim build-essential gdb-multiarch qemu-system-misc gcc-riscv64-linux-gnu binutils-riscv64-linux-gnu libpixman-1-dev gcc-riscv64-unknown-elf libglib2.0-dev pkg-config&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 2.安装QEMU和配置QEMU&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; wget https://download.qemu.org/qemu-5.1.0.tar.xz &lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; tar xf qemu-5.1.0.tar.xz &lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; qemu-5.1.0 &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    ./configure --disable-kvm --disable-werror --prefix&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/usr/local --target-list&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;riscv64-softmmu &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    make &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    make install&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 下载code-server并安装&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; apt-get install -y aria2 &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    aria2c https://github.com.cnpmjs.org/cdr/code-server/releases/download/v3.12.0/code-server_3.12.0_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;arch_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.deb &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    dpkg -i code-server_3.12.0_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;arch_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.deb&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 切换用户mit6s081&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; mit6s081&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 下载一些code-server的插件&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; mkdir /home/mit6s081/extensions&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 1.Markdown Extension&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; code-server --install-extension yzhang.markdown-all-in-one&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 2.Cpp Extension&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ADD&lt;/span&gt; cpptools-linux.vsix /home/mit6s081/extensions&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; code-server --install-extension /home/mit6s081/extensions/cpptools-linux.vsix&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 3.Material Theme Extension&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; code-server --install-extension equinusocio.vsc-material-theme &lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 切换回Root用户，拥有最高权限&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; root&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; apt-get update&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 暴露8848端口，用于code-server本地运行的端口&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPOSE&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; 8848&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 设置code-server密码&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ENV&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PASSWORD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;mit6s081

&lt;span class=&#34;k&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; mit6s081&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CMD&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;code-server&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--bind-addr&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.0.0.0:8848&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--auth&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;写好&lt;code&gt;Dockerfile&lt;/code&gt;之后，直接&lt;code&gt;docker build -t &amp;lt;镜像名&amp;gt;:&amp;lt;版本号/标签&amp;gt; .&lt;/code&gt;就构建好镜像了，注意后面那个&lt;code&gt;.&lt;/code&gt;可不能省略，具体原因看&lt;a href=&#34;https://yeasy.gitbook.io/docker_practice/image/build#jing-xiang-gou-jian-shang-xia-wen-context&#34;&gt;这里&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;之所以创建了两个用户也是为了大家在使用环境的时候专注于使用当前环境，而不给大家&lt;code&gt;root&lt;/code&gt;用户修改环境的权限，所以如果你遇到了使用&lt;code&gt;apt-get update&lt;/code&gt;等指令时给出&lt;code&gt;denied&lt;/code&gt;的报错正是说明了这点。&lt;/p&gt;
&lt;p&gt;当然如果你想自己增加一些功能，也可以本地使用命令&lt;code&gt;docker exec -u root -it &amp;lt;Container名字&amp;gt; /bin/bash&lt;/code&gt;进入你创建的&lt;code&gt;container&lt;/code&gt;中，然后你可以自定义这个&lt;code&gt;Container&lt;/code&gt;的环境，然后&lt;code&gt;commit&lt;/code&gt;到镜像上，如果功能不错提高实验幸福感的话，欢迎知乎私信或者Github上提Issue。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;3---一些环境搭建中遇到的坑&#34;&gt;3 - 一些环境搭建中遇到的坑&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;被选择时区的环节卡住&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Please &lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; the geographic area in which you live. Subsequent configuration
questions will narrow this down by presenting a list of cities, representing
the &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; zones in which they are located.

  1. Africa      4. Australia  7. Atlantic  10. Pacific  13. Etc
  2. America     5. Arctic     8. Europe    11. SystemV
  3. Antarctica  6. Asia       9. Indian    12. US
Geographic area:
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;可以通过配置环境变量，来跳过这个步骤&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span class=&#34;k&#34;&gt;ENV&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;DEBIAN_FRONTEND&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;noninteractive
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;RUN的使用不当，导致环境搭建过程中一直出错&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;主要是最初不理解Dockerfile，顺着指令说明书就开始莽了，后来才发现&lt;code&gt;RUN&lt;/code&gt;指令每次执行会在当前&lt;code&gt;image&lt;/code&gt;之上的新的一层中执行后面的命令并提交结果，这样就导致前后有关联的指令执行总是报错（原因就是他们本就应该是一条流程下来的，现在拆分成不同层了当然会出错），所以我才学会用 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;和&lt;code&gt;\&lt;/code&gt;（反斜杠）将单个 RUN 指令延续到下一行。&lt;/p&gt;
&lt;p&gt;比如下面这几行例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; qemu-5.1.0 &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    ./configure --disable-kvm --disable-werror --prefix&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/usr/local --target-list&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;riscv64-softmmu &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    make &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    make install&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果不用&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;和&lt;code&gt;\&lt;/code&gt;关联各行的话，比如第一行&lt;code&gt;cd&lt;/code&gt;到那个&lt;strong&gt;qemu-5.1.0&lt;/strong&gt;目录了，下一行**./configure**执行的时候在新的一层了，就一定会报错不存在**./configure**（因为这个**configure**配置**qemu**的可执行文件就在**qemu-5.1.0**目录下）&lt;/p&gt;
&lt;h2 id=&#34;使用篇&#34;&gt;使用篇&lt;/h2&gt;
&lt;h3 id=&#34;1---方式一dockerhub&#34;&gt;1 - 方式一：DockerHub&lt;/h3&gt;
&lt;h4 id=&#34;首先pull下来我的docker镜像&#34;&gt;&lt;strong&gt;首先pull下来我的Docker镜像&lt;/strong&gt;：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;由于DockerHub用的是国外的服务器，所以很慢很慢，但是就一行命令，比较容易&lt;/li&gt;
&lt;li&gt;镜像地址在这里：https://hub.docker.com/repository/docker/calvinhaynes412/mit6.s081/tags?page=1&amp;amp;ordering=last_updated&lt;/li&gt;
&lt;li&gt;最新版本的pull镜像的命令如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker pull calvinhaynes412/mit6.s081:v1.3.1
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;然后去github上fork我上传的mit6s081原版纯净的实验环境&#34;&gt;&lt;strong&gt;然后去Github上Fork我上传的MIT6.S081原版纯净的实验环境&lt;/strong&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;这样你就能自己git管理自己的实验代码了，其实我就是把官方的git仓库自己上传了，主要是由于MIT pdos官方没有放出来这个2020实验的源代码不方便Fork之后直接自己使用，所以我转载了官方的2020实验源代码，是方便大家直接Fork下来自己做实验，并且我加了一个MIT的开源许可协议。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;项目地址：https://github.com/CalvinHaynes/MIT6.S081-2020-labs（）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fork完之后clone到你本地的一个文件夹里面&lt;/strong&gt;（重点，之后创建&lt;code&gt;Docker&lt;/code&gt;的&lt;code&gt;Container&lt;/code&gt;的时候需要使用）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;想在这里顺便介绍一下我自己学习此Lab整理笔记和实验解决方案的一个仓库，供大家学习参考，如果有帮助的话希望给我点一个STAR&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GitHub项目地址：https://github.com/CalvinHaynes/MIT6.S081-2020Fall&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;码云版本：https://gitee.com/CalvinHaynes/MIT6.S081-2020Fall&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在项目中涉及了每个实验（如果我能坚持做完的话，我相信我可以）的实验解决代码、实验笔记、课堂笔记、课堂小练习、一些学习操作系统优质的资料等等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;创建一个container&#34;&gt;&lt;strong&gt;创建一个Container&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;点击&lt;code&gt;RUN&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.1je3xe1ues0w.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置&lt;code&gt;Container&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.sdofgdy3chc.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里的&lt;code&gt;Volumes&lt;/code&gt;配置你可以理解为将&lt;code&gt;Host Path&lt;/code&gt;中的文件目录挂载在此&lt;code&gt;Container&lt;/code&gt;中，挂载在&lt;code&gt;Container&lt;/code&gt;的具体位置就是这里配置的&lt;code&gt;Container Path&lt;/code&gt;（这里就直接配置成我图中写的路径，因为我已经在&lt;code&gt;.gdbinit&lt;/code&gt;设置过了，如果你修改为其他位置的话，就修改&lt;code&gt;/home/mit6s081/.gdbinit&lt;/code&gt;中的内容为&lt;code&gt;add-auto-load-safe-path &amp;lt;你设置的Container Path&amp;gt;/.gdbinit&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Volumes简单理解就是主机目录挂载到容器上&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2---方式二阿里云镜像仓库&#34;&gt;2 - 方式二：阿里云镜像仓库&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;由于DockerHub服务器在国外，实在难以忍受它的速度，有一天偶然发现，阿里云竟然有容器镜像服务，NICE！冲！！！&lt;/li&gt;
&lt;li&gt;这个速度简直飞快，实测大约不到一分钟就pull下来了&lt;/li&gt;
&lt;li&gt;先在Docker Engine中加入阿里云的Docker镜像，前面的Docker Engine设置中的&lt;code&gt;&amp;quot;https://xzahxrmt.mirror.aliyuncs.com&amp;quot;&lt;/code&gt;就是阿里云的镜像加速器&lt;/li&gt;
&lt;li&gt;运行指令：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker pull registry.cn-beijing.aliyuncs.com/calvin_haynes/mit6.s081:release-v1.0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;之后&lt;strong&gt;创建一个Container&lt;/strong&gt;的方法和上述一致&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3---开始做实验吧&#34;&gt;3 - 开始做实验吧！&lt;/h3&gt;
&lt;p&gt;如果你也是配置的&lt;code&gt;8848&lt;/code&gt;端口，那么直接点击http://localhost:8848/&lt;strong&gt;(密码是==mit6s081==哦&lt;/strong&gt;)，就可以进入在线的&lt;code&gt;Vscode&lt;/code&gt;进行愉快（狗头保命）的&lt;code&gt;MIT6.S081&lt;/code&gt;实验了！！&lt;/p&gt;
&lt;h2 id=&#34;完整的命令行使用教程服务器端和本地linux系统用户看这里&#34;&gt;完整的命令行使用教程(服务器端和本地Linux系统用户看这里)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://yeasy.gitbook.io/docker_practice/install&#34;&gt;安装docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;配置阿里云镜像加速器（&lt;strong&gt;以下命令针对ubuntu&lt;/strong&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkdir -p /etc/docker
sudo tee /etc/docker/daemon.json &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;  &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://xzahxrmt.mirror.aliyuncs.com&amp;#34;]
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;}
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
sudo systemctl daemon-reload
sudo systemctl restart docker
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;pull镜像（最新版本，之后版本更新的通知我会在评论区说明，记得偶尔来看看）&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker pull registry.cn-beijing.aliyuncs.com/calvin_haynes/mit6.s081:release-v1.3.1
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;clone实验源代码(&lt;strong&gt;我还会慢慢在这个项目中增加我学习过程中的笔记和实验代码等资料,如果对你有帮助的话,希望帮我点个&lt;code&gt;STAR&lt;/code&gt;哦&lt;/strong&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/CalvinHaynes/MIT6.S081-2020-labs &amp;lt;放实验文件的任何你想要放的位置&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;创建Container（&lt;code&gt;-u 0:0&lt;/code&gt;是为了保证&lt;code&gt;Container&lt;/code&gt;中的&lt;code&gt;root&lt;/code&gt;用户和本机的&lt;code&gt;root&lt;/code&gt;用户权限一致,不过其实不建议用&lt;code&gt;root&lt;/code&gt;权限，所以如果本机和&lt;code&gt;Container&lt;/code&gt;的其他非&lt;code&gt;root&lt;/code&gt;用户有相同的&lt;code&gt;uid&lt;/code&gt;的话最好 &lt;code&gt;-u uid:uid&lt;/code&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -p 8848:8848 --name&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;mit6.s081 -u 0:0 -v &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;刚才clone的项目的位置&amp;gt;:&amp;lt;设置一个Container中的位置映射到前面的clone的项目的位置&amp;gt;&amp;#34;&lt;/span&gt; registry.cn-beijing.aliyuncs.com/calvin_haynes/mit6.s081:release-v1.3.1
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;本地用户浏览器访问 &lt;strong&gt;http://localhost:8848/&lt;/strong&gt;  密码： &lt;strong&gt;mit6s081&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;服务器端用户浏览器访问&lt;strong&gt;http://&amp;lt;服务器公网ip&amp;gt;:8848/&lt;/strong&gt; 密码： &lt;strong&gt;mit6s081&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;p&gt;这虽然只是一个MIT6.S081的Docker环境搭建教程，但是同时也是以后搭建其他实验环境的思路，如果学会了这一套思路和手段，那么以后后搭建任何环境都是唾手可得的！！&lt;/p&gt;
&lt;p&gt;关于&lt;code&gt;MIT6.S081&lt;/code&gt;的实验解析和课程笔记未来都会逐渐在我的&lt;a href=&#34;https://github.com/CalvinHaynes/MIT6.S081-2020Fall&#34;&gt;项目&lt;/a&gt;中更新，欢迎大家关注这个项目，关于此&lt;code&gt;Docker&lt;/code&gt;，还有很多可以优化的地方，我会同步更新&lt;code&gt;Dockerfile&lt;/code&gt;，&lt;code&gt;Docker&lt;/code&gt;阿里云镜像/官方镜像，敬请期待。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;感谢您看到最后，如果本文对您有所帮助的话，还希望给我一个一键三连（狗头保命），如果对于我和我的文章感兴趣的话，欢迎点一个关注，您会收到我回答和文章的更新通知，也欢迎加入我建立的技术交流群QQ：725133797 讨论交流。&lt;/p&gt;
&lt;p&gt;最后附上我的个人博客站：https://blog.calvinhaynes.top/，欢迎访问和交流&lt;/p&gt;
</content:encoded>
        <dc:creator>Calvin Haynes</dc:creator>
        
        
        
        
          
            
              <category>OS操作系统</category>
            
          
        
        
            
              <category>CS基础知识</category>
            
        
        
      </item>
      
      <item>
        <title>属于每一个程序猿和学生的一份高效率软件清单--第三弹:windows系统优化工具（持续更新）</title>
        <link>https://blog.calvinhaynes.top/posts/software_3/</link>
        <pubDate>Sun, 03 Oct 2021 20:47:53 +0800</pubDate>
        <author>chx1006488386@163.com (Calvin Haynes)</author>
        <atom:modified>Sun, 03 Oct 2021 20:47:53 +0800</atom:modified>
        <guid>https://blog.calvinhaynes.top/posts/software_3/</guid>
        <description>前言 这是一个我正在使用的软件清单系列文章，涵盖了时间管理，高效率开发工具，系统优化软件，写文档工具流等。 之所以写这篇文章，很大一部分原因是想</description>
        <content:encoded>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;这是一个我正在使用的软件清单系列文章，涵盖了时间管理，高效率开发工具，系统优化软件，写文档工具流等。&lt;/p&gt;
&lt;p&gt;之所以写这篇文章，很大一部分原因是想和大家分享一下我的效率软件清单，另一个原因是也为自己下次重装系统做一个保障，免得忘记什么。&lt;/p&gt;
&lt;p&gt;下面我们就正式开始介绍吧，目录我会分好类的，每个超链接都指向一些我认为的非常好的资源以及各个软件的下载地址等等的信息，大家按照自己想要看的点进去就可以了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;这可能是我的一个专栏系列（分享我使用的所有的有趣和高效率的软件或插件，网页等）&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;windows-系统优化工具&#34;&gt;windows 系统优化工具&lt;/h2&gt;
&lt;h3 id=&#34;1---分区助手httpswwwdisktoolcnfeaturehtml&#34;&gt;&lt;a href=&#34;https://www.disktool.cn/feature.html&#34;&gt;1 - 分区助手&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;想必大家都被分区弄得很头痛吧，在装系统时 C 盘分的太小了，现在 C 盘红了，还不好清理，那么这款分区助手就能完美解决你的问题&lt;/li&gt;
&lt;li&gt;图形化界面相当友好，电脑小白也能操作&lt;/li&gt;
&lt;li&gt;附上分区助手官网的使用手册：https://www.disktool.cn/jiaocheng/index.html&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.30co17hqv740.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;2---ccleaner电脑管家httpswwwccleanercom&#34;&gt;&lt;a href=&#34;https://www.ccleaner.com/&#34;&gt;2 - CCleaner：电脑管家&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;虽然网上骂声一片，说 CCleaner 是流氓软件，但是我依旧爱他，爱他简约而不简单的功能&lt;/li&gt;
&lt;li&gt;CCleaner 的功能列表如下：
&lt;ul&gt;
&lt;li&gt;垃圾清理&lt;/li&gt;
&lt;li&gt;驱动更新&lt;/li&gt;
&lt;li&gt;注册表清理（超级强的功能）&lt;/li&gt;
&lt;li&gt;卸载程序&lt;/li&gt;
&lt;li&gt;管理 PC 启动项&lt;/li&gt;
&lt;li&gt;重复文件查找&lt;/li&gt;
&lt;li&gt;系统备份和还原&lt;/li&gt;
&lt;li&gt;Cookie 和浏览器插件管理&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;软件界面如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/GIF-2021-9-22-22-06-44.135fh22zoks0.gif&#34; alt=&#34;GIF-2021-9-22-22-06-44&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;p&gt;好的工具只是方便我们管理自己的 PC 或者便于开发而已，千万不能陷入工具的陷阱，人和动物最大的区别就是学会了制造工具，但是过分依赖于工具也会毁了一个人，在使用工具时要保持一个态度就是：对于自己十分明确的功能勇敢的使用和尝试，对于自己不明确的功能先去学习原理，再结合搜索引擎上的经验慢慢投入使用。&lt;/p&gt;
&lt;p&gt;最后希望大家按需取用上述的软件，玩的愉快！！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34; /&gt; &lt;strong&gt;未来我还会持续更新，在清单中添加更加有趣的软件，敬请期待！！！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
        <dc:creator>Calvin Haynes</dc:creator>
        
        
        
        
          
            
              <category>软件清单</category>
            
          
        
        
            
              <category>高效工具系列</category>
            
        
        
      </item>
      
      <item>
        <title>属于每一个程序猿和学生的一份高效率软件清单--第二弹:程序猿写文档必备工具箱（持续更新）</title>
        <link>https://blog.calvinhaynes.top/posts/software_2/</link>
        <pubDate>Sat, 02 Oct 2021 22:55:47 +0800</pubDate>
        <author>chx1006488386@163.com (Calvin Haynes)</author>
        <atom:modified>Sat, 02 Oct 2021 22:55:47 +0800</atom:modified>
        <guid>https://blog.calvinhaynes.top/posts/software_2/</guid>
        <description>前言 这是一个我正在使用的软件清单系列文章，涵盖了时间管理，高效率开发工具，系统优化软件，写文档工具流等。 之所以写这篇文章，很大一部分原因是想</description>
        <content:encoded>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;这是一个我正在使用的软件清单系列文章，涵盖了时间管理，高效率开发工具，系统优化软件，写文档工具流等。&lt;/p&gt;
&lt;p&gt;之所以写这篇文章，很大一部分原因是想和大家分享一下我的效率软件清单，另一个原因是也为自己下次重装系统做一个保障，免得忘记什么。&lt;/p&gt;
&lt;p&gt;下面我们就正式开始介绍吧，目录我会分好类的，每个超链接都指向一些我认为的非常好的资源以及各个软件的下载地址等等的信息，大家按照自己想要看的点进去就可以了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;这可能是我的一个专栏系列（分享我使用的所有的有趣和高效率的软件或插件，网页等）&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;程序猿写文档必备工具箱&#34;&gt;程序猿写文档必备工具箱&lt;/h2&gt;
&lt;h3 id=&#34;1---snipaste截图软件httpswwwsnipastecom&#34;&gt;&lt;a href=&#34;https://www.snipaste.com/&#34;&gt;1 - Snipaste：截图软件&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;这绝对是综合看来我用过所有 windows 下截图软件最棒的了，所有的截图功能都有，像全屏截图、窗口截图，自定义像素截图等等基本功能都有。&lt;/li&gt;
&lt;li&gt;最牛的功能是它的贴图功能，不知道大家有没有遇到过这样一种情况：假如上网课的时候，老师讲的下部分是关于上一张 PPT 的，但是你手中还没有 PPT，或者你想对比一下之前的 PPT 来学习，那么这个时候贴图就发挥其作用了，示例如下：（你还可以发挥你的其他想象利用这个功能）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/GIF-2021-9-22-21-32-14.7k11ri8x4ng0.gif&#34; alt=&#34;GIF-2021-9-22-21-32-14&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以设置的选项如下：（==你可以在控制中自定义各个功能的快捷键，设置成你熟悉的==）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/GIF-2021-9-22-21-23-05.4s2ojtxk63u0.gif&#34; alt=&#34;GIF-2021-9-22-21-23-05&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;2---gifcam一款录制-gif-的软件httpblogbahraniappscomgifcamdownload&#34;&gt;&lt;a href=&#34;http://blog.bahraniapps.com/gifcam/#download&#34;&gt;2 - GifCam：一款录制 GIF 的软件&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;看了上面的 GIF 图，是不是也在奇怪我这些图是怎么自己做的，那么这就向您介绍这款软件：GIFCam，这是一款可以录制 GIF 动图的软件，短小精悍，仅仅只有录制 GIF 的功能，你可以设置输出文件的 FPS，自定义录制的窗口大小或者全屏等等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/GIF-2021-9-22-21-39-42.1zze3osdryow.gif&#34; alt=&#34;GIF-2021-9-22-21-39-42&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;3---picx-图床一个开源作者写的开源图床httpspicxxpoetcnupload&#34;&gt;&lt;a href=&#34;https://picx.xpoet.cn/#/upload&#34;&gt;3 - PicX 图床：一个开源作者写的开源图床&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;其实这个不能算是软件，但由于 chrome 浏览器可以直接把这个网站直接打包成一个应用在本地，也算个软件把。&lt;/li&gt;
&lt;li&gt;这个开源图床目前还在优化和更新中，作者也十分努力的在开发和维护这个项目&lt;/li&gt;
&lt;li&gt;这个图床就是利用你自己建的 Github 库存储图片，然后提供图片的管理和 Markdown+CDN 格式的自动转换，上传图片之后直接复制就可以放在你的 md 文档中了，着实挺方便，而且界面 UI 和交互也都很不错。&lt;/li&gt;
&lt;li&gt;使用情况如下：（&lt;strong&gt;感谢作者：https://xpoet.cn/&lt;/strong&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/GIF-2021-9-22-21-56-04.217loab9zsao.gif&#34; alt=&#34;GIF-2021-9-22-21-56-04&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;p&gt;好的工具只是方便我们管理自己的 PC 或者便于开发而已，千万不能陷入工具的陷阱，人和动物最大的区别就是学会了制造工具，但是过分依赖于工具也会毁了一个人，在使用工具时要保持一个态度就是：对于自己十分明确的功能勇敢的使用和尝试，对于自己不明确的功能先去学习原理，再结合搜索引擎上的经验慢慢投入使用。&lt;/p&gt;
&lt;p&gt;最后希望大家按需取用上述的软件，玩的愉快！！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34; /&gt; &lt;strong&gt;未来我还会持续更新，在清单中添加更加有趣的软件，敬请期待！！！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
        <dc:creator>Calvin Haynes</dc:creator>
        
        
        
        
          
            
              <category>软件清单</category>
            
          
        
        
            
              <category>高效工具系列</category>
            
        
        
      </item>
      
      <item>
        <title>属于每一个程序猿和学生的一份高效率软件清单--第一弹:程序猿高效开发工具（持续更新）</title>
        <link>https://blog.calvinhaynes.top/posts/software/</link>
        <pubDate>Thu, 16 Sep 2021 12:00:04 +0800</pubDate>
        <author>chx1006488386@163.com (Calvin Haynes)</author>
        <atom:modified>Thu, 16 Sep 2021 12:00:04 +0800</atom:modified>
        <guid>https://blog.calvinhaynes.top/posts/software/</guid>
        <description>前言 这是一个我正在使用的软件清单系列文章，涵盖了时间管理，高效率开发工具，系统优化软件，写文档工具流等。 之所以写这篇文章，很大一部分原因是想</description>
        <content:encoded>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;这是一个我正在使用的软件清单系列文章，涵盖了时间管理，高效率开发工具，系统优化软件，写文档工具流等。&lt;/p&gt;
&lt;p&gt;之所以写这篇文章，很大一部分原因是想和大家分享一下我的效率软件清单，另一个原因是也为自己下次重装系统做一个保障，免得忘记什么。&lt;/p&gt;
&lt;p&gt;下面我们就正式开始介绍吧，目录我会分好类的，每个超链接都指向一些我认为的非常好的资源以及各个软件的下载地址等等的信息，大家按照自己想要看的点进去就可以了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;这可能是我的一个专栏系列（分享我使用的所有的有趣和高效率的软件或插件，网页等）&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;程序猿高效开发工具&#34;&gt;程序猿高效开发工具&lt;/h2&gt;
&lt;h3 id=&#34;1---jetbrains-toolboxjetbrains-家的工具箱-httpswwwjetbrainscomtoolbox-app&#34;&gt;&lt;a href=&#34;https://www.jetbrains.com/toolbox-app/&#34;&gt;1 - JetBrains Toolbox：JetBrains 家的工具箱 &lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;自从用了 JetBrains 家的 IDEA，就爱上了他们家 IDE 的风格，目前也是离不开了，写各种语言程序的时候都是优先找他们家的 IDE，优秀的插件和特别 Geek 风的界面确实让人眼前一亮，JetBrains 推出的这款 JetBrains Toolbox 集成了 JetBrains 家所有工具的下载，更新，项目管理，对于喜欢 JetBrains 家 IDE 的朋友们确实方便了许多。&lt;/p&gt;
&lt;p&gt;只需要创建一个 JetBrains 的文件夹，在设置中设置其为下载安装位置，就可以将所有 JetBrains 家的 IDE 集中在一个文件夹中，对于要重装系统的朋友在设置了 IDE 中的插件和配置同步后，直接下载 JetBrains Toolbox，也能免去很多麻烦。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.31wguugc2gk.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;2---vscode轻量代码编辑器httpscodevisualstudiocom&#34;&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;2 - Vscode：轻量代码编辑器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;虽然 JetBrains 家的 IDE 十分好用，但是对于简单的代码编辑工作，调试小段代码，确实显得就不太方便了，这时候一个优秀的代码编辑器就能胜任这些快速编辑代码的工作。&lt;/p&gt;
&lt;p&gt;市面上主流的有 Sublime Text，Vscode，NotePad ++，Atom，Vim 等等，但是 Vscode 现在丰富的插件以及优秀的远程开发的能力确实突出。&lt;/p&gt;
&lt;p&gt;所以跌跌撞撞最终还是选择了拜倒在 Vscode 的石榴裙下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.mtp4udsaeb4.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;有关于 Vscode，我还写了一篇利用 code-server 和阿里云搭建在线版 Vscode 的文章，可以让你在网页，手机，Ipad 上随时随地运行 Vscode。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/379632978&#34;&gt;https://zhuanlan.zhihu.com/p/379632978&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;3---utools桌面快速工具箱httpsutools&#34;&gt;&lt;a href=&#34;https://u.tools/&#34;&gt;3 - uTools：桌面快速工具箱&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;uTools 是一个极简、插件化的现代桌面软件，通过自由选配丰富的插件，打造得心应手的工具集合。&lt;/p&gt;
&lt;p&gt;通过快捷键（默认 &lt;code&gt;alt + space&lt;/code&gt; ）就可以快速呼出这个搜索框。你可以往输入框内粘贴文本、图片、截图、文件、文件夹等等，能够处理此内容的插件也早已准备就绪，统一的设计风格和操作方式，助你高效的得到结果。&lt;/p&gt;
&lt;p&gt;一旦你熟悉它后，能够为你节约大量时间，即用即走、不中断、无干扰，让你可以更加专注地改变世界。&lt;/p&gt;
&lt;p&gt;这是一家创业公司做的一款软件，这种一切皆插件，呼出即使用的感觉是前所未有的，大大提高了开发效率&lt;/p&gt;
&lt;p&gt;在插件中心中可以下载很多高效的插件，比如思维导图，Markdown 文档，快速打开最近的项目，翻译，基于 Everything 的搜索，快速打开 PC 上的任何一款软件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.4neb3udouo00.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.2l8ggbrf1y00.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;==&lt;strong&gt;关于高效的插件未来我应该会单独分享。&lt;/strong&gt;==&lt;/p&gt;
&lt;h3 id=&#34;4---termiusssh-终端httpswwwtermiuscom&#34;&gt;&lt;a href=&#34;https://www.termius.com/&#34;&gt;4 - Termius：SSH 终端&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;这是一个我目前用过的所有的 SSH 终端中最好的一个，它不仅美观，而且跨平台，对于移动端的适配手势简直不要太香，而且&lt;a href=&#34;https://blog.csdn.net/u012195214/article/details/87214085&#34;&gt;申请 Github 学生包&lt;/a&gt;还可以免费享用更多的高级特权（Github 学生包所有的&lt;a href=&#34;https://education.github.com/pack/offers&#34;&gt;特权&lt;/a&gt; ）&lt;/li&gt;
&lt;li&gt;我之前写过一篇文章就有介绍过这个软件，大家有兴趣也可以去看看：https://zhuanlan.zhihu.com/p/379632978&lt;/li&gt;
&lt;li&gt;以下是软件界面的图片（可以自定义终端的字体和颜色风格等）（全平台通用和同步，包含 Android，IOS，Windows，MacOS，Linux）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.2e00phmhdyck.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持 SFTP 功能，NICE！！！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;![GIF 2021-6-10 16-34-08](&lt;a href=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/GIF&#34;&gt;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/GIF&lt;/a&gt; 2021-6-10 16-34-08.1n12dp0c16ow.gif)&lt;/p&gt;
&lt;h3 id=&#34;5---beyond-compare文件对比软件httpswwwbeyondcompareprocomdownload&#34;&gt;&lt;a href=&#34;https://www.beyondcomparepro.com/download&#34;&gt;5 - Beyond Compare：文件对比软件&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Beyond Compare 是一款功能强大而且十分实用的文件对比软件，同时也能一定程度的对文件进行整理及操作，对于电脑中文件较为繁杂且有较多重复模糊不清的电脑使用者尤为适合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;它的对比功能是真的很强大，包括文件夹，文本，表格，图片等等对比他都可以实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我的使用场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仿写别人或者优秀网站的网页代码时，没有达成预期效果时，两边对比快速定位我的问题&lt;/li&gt;
&lt;li&gt;对比一些功能相同但是性能有差别的代码的时候&lt;/li&gt;
&lt;li&gt;对比图片，表格信息，文件夹（需要一致性时找不同用）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.q22z3o8eark.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;==&lt;strong&gt;检测到差异时：&lt;/strong&gt;==&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.5llp6d8z8jk0.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;6---github-desktop迄今为止最好的-git-gui-工具httpsdesktopgithubcom&#34;&gt;&lt;a href=&#34;https://desktop.github.com/&#34;&gt;6 - Github Desktop：迄今为止最好的 Git GUI 工具&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;你是否为写 Git 命令烦恼，找了很多图形化处理工具，但是都不是很人性化，而且界面丑而差，那么 Github Desktop 这就来了，包您满意诶嘿嘿。&lt;/li&gt;
&lt;li&gt;Github Desktop 是 Github 官方开发的 GIthub 图形化软件，就冲这一点，你应该就能知道这个软件应该很好用了吧，毕竟是官方的，起码针对 Github 的支持是杠杠滴&lt;/li&gt;
&lt;li&gt;具体使用情况我就不细说了，这里附上使用指南：https://docs.github.com/cn/desktop/installing-and-configuring-github-desktop/overview/getting-started-with-github-desktop&lt;/li&gt;
&lt;li&gt;==&lt;strong&gt;简单的界面演示如下：&lt;/strong&gt;==&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/GIF-2021-9-22-21-46-20.szft3tbxetc.gif&#34; alt=&#34;GIF-2021-9-22-21-46-20&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;7---wireshark最牛的开源免费网络封包分析工具httpswwwwiresharkorg&#34;&gt;&lt;a href=&#34;https://www.wireshark.org/&#34;&gt;7 - WireShark：最牛的开源免费网络封包分析工具&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;软件正如其名字一样，在网线中深潜的鲨鱼。&lt;/li&gt;
&lt;li&gt;此软件的作用就是抓包，分析网络中各种协议栈各层的数据包，并可以通过一些过滤表达式得到我们需要拿来分析的数据包（比如分析TCP/IP，HTTP，UDP等）&lt;/li&gt;
&lt;li&gt;使用此软件可以实现
&lt;ul&gt;
&lt;li&gt;网络管理员检查网络&lt;/li&gt;
&lt;li&gt;学习计算机网络，通过抓包深刻理解TCP/IP协议栈&lt;/li&gt;
&lt;li&gt;Socket编程测试&lt;/li&gt;
&lt;li&gt;测试工程师使用其测试软件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;利用WireShark测试TCP/IP三次握手，四次挥手&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.58ghbuhdekg0.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wireshark与对应的OSI七层模型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.78rko7uidos0.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;8---postman模拟httphttps请求工具httpswwwpostmancom&#34;&gt;&lt;a href=&#34;https://www.postman.com/&#34;&gt;8 - Postman：模拟HTTP/HTTPS请求工具&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Postman是谷歌开发的一款网页调试和接口测试工具，能够发送任何类型的http请求，支持GET/PUT/POST/DELETE等方法。Postman非常简单易用，可以直接填写URL，header，body等就可以发送一个请求，用来测试api接口非常方便。（对于现在各种浏览器都自动把http请求转换为HTTPS请求的情况，用于测试HTTP请求是个很不错的选择）&lt;/li&gt;
&lt;li&gt;postman快速上手视频教程推荐（科学上网）：https://www.youtube.com/watch?v=VywxIQ2ZXw4&amp;amp;list=PL6YJmTsHJFpGEDbyDCMFXoC42_WQYJPj&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/Postman%E8%BD%AF%E4%BB%B6%E7%95%8C%E9%9D%A2.3gapnq6u1ci0.png&#34; alt=&#34;Postman软件界面&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;9---windows-terminalwindows命令行的崛起httpswwwmicrosoftcomzh-cnpwindows-terminal9n0dx20hk701activetabpivotoverviewtab&#34;&gt;&lt;a href=&#34;https://www.microsoft.com/zh-cn/p/windows-terminal/9n0dx20hk701?activetab=pivot:overviewtab&#34;&gt;9 - Windows Terminal：windows命令行的崛起&lt;/a&gt;&lt;/h3&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;p&gt;好的工具只是方便我们管理自己的 PC 或者便于开发而已，千万不能陷入工具的陷阱，人和动物最大的区别就是学会了制造工具，但是过分依赖于工具也会毁了一个人，在使用工具时要保持一个态度就是：对于自己十分明确的功能勇敢的使用和尝试，对于自己不明确的功能先去学习原理，再结合搜索引擎上的经验慢慢投入使用。&lt;/p&gt;
&lt;p&gt;最后希望大家按需取用上述的软件，玩的愉快！！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34; /&gt; &lt;strong&gt;未来我还会持续更新，在清单中添加更加有趣的软件，敬请期待！！！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
        <dc:creator>Calvin Haynes</dc:creator>
        
        
        
        
          
            
              <category>软件清单</category>
            
          
        
        
            
              <category>高效工具系列</category>
            
        
        
      </item>
      
      <item>
        <title>上课摸鱼必备 -- Vscode网页版的搭建教程</title>
        <link>https://blog.calvinhaynes.top/posts/vscode-online-build/</link>
        <pubDate>Thu, 05 Aug 2021 20:41:23 +0800</pubDate>
        <author>chx1006488386@163.com (Calvin Haynes)</author>
        <atom:modified>Thu, 05 Aug 2021 20:41:23 +0800</atom:modified>
        <guid>https://blog.calvinhaynes.top/posts/vscode-online-build/</guid>
        <description>前言 ​ 上课想练练数据结构与算法？或者就是想玩玩儿Vscode？或者有一个自己的服务器，但是觉得没有利用到极致？那么这篇文章将带你搭建一个在线</description>
        <content:encoded>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;​		上课想练练数据结构与算法？或者就是想玩玩儿Vscode？或者有一个自己的服务器，但是觉得没有利用到极致？那么这篇文章将带你搭建一个在线版的Vscode，利用浏览器实现全平台使用Vscode，管你什么手机，Pad，电脑，板砖，咳咳，整就完了！！！&lt;/p&gt;
&lt;p&gt;​		文章中所有的超链接都是很不错的资源，建议都要仔细看看，为了不让文章那么太长，所以我用了不少超链接。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文搭建环境：开源项目&lt;a href=&#34;https://github.com/cdr/code-server&#34;&gt;code-server&lt;/a&gt;，一台服务器（至少一核2G才能有比较流畅的效果）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;如果本文对你有帮助的话，还望关注，点赞，转发，收藏，谢谢咯。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;一运行效果&#34;&gt;（一）运行效果&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image-20210610155903032.3hg5z4x2jgw0.png&#34; alt=&#34;image-20210610155903032&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个Vscode在线版是运行在我买的阿里云学生机的9999端口的，毕竟9.9一月，对于学生党很友好，我的个人博客也搭在上面的，性能一般，但是也很够用了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;二基础配置&#34;&gt;（二）基础配置&lt;/h2&gt;
&lt;h4 id=&#34;1---下载code-server到服务器上&#34;&gt;&lt;strong&gt;1 - 下载code-server到服务器上&lt;/strong&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;进到服务器的SSH中，这个只要你买了服务器应该都可以用SSH的，服务器还没买的，也不会用服务器的，看以下几篇文章（其实不限制与阿里云的，不是推广阿里云哈，其他云怎么用大家自行选购，因为我用的是阿里云，所以这几篇文章也都是阿里云的一些使用教程）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/368487727&#34;&gt;https://zhuanlan.zhihu.com/p/368487727&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/search?type=content&amp;amp;q=%E9%98%BF%E9%87%8C%E4%BA%91%E5%AD%A6%E7%94%9F%E6%9C%BA%E6%95%99%E7%A8%8B&#34;&gt;https://www.zhihu.com/search?type=content&amp;amp;q=%E9%98%BF%E9%87%8C%E4%BA%91%E5%AD%A6%E7%94%9F%E6%9C%BA%E6%95%99%E7%A8%8B&lt;/a&gt;（自己挑着看）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/u011002997/article/details/83933365&#34;&gt;https://blog.csdn.net/u011002997/article/details/83933365&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;官网上应该也还有比较完善的使用手册啥的，深入玩一下的话，建议自己多研究研究，上面这几篇文章也是我大体看上去不错的，要想明白究竟怎么用的还是要自己用好搜索引擎。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-linux&#34; data-lang=&#34;linux&#34;&gt;wget https://github.com/cdr/code-server/releases/download/v3.10.2/code-server-3.10.2-linux-amd64.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;这一步下载速度可能会很慢，甚至中途失败，可以考虑挂代理，不会Linux下挂代理的，看我下面的骚操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然，你最好有一个梯子，这样总归是要更快和更稳定的。&lt;/p&gt;
&lt;p&gt;下面我将演示如何在Windows下下载code-server再传到服务器上：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先我想介绍一下我使用过那么多的SSH最好用的一款软件：&lt;strong&gt;&lt;a href=&#34;https://www.termius.com/&#34;&gt;Termius&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	这个软件是真正的全平台，而且简直是我这种颜值控福利，终端各种皮肤，贼好看，如果你有幸申请到&lt;a href=&#34;https://blog.csdn.net/u012195214/article/details/87214085&#34;&gt;Github学生包&lt;/a&gt;的话，还有其他不少福利。&lt;/p&gt;
&lt;p&gt;​	&lt;a href=&#34;https://www.duangvps.com/archives/417&#34;&gt;关于Termius的使用教程&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在Windows下载code-server的压缩包&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/cdr/code-server/releases&#34;&gt;点击这个链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再点这个，就开始下载了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.6m7u4m3ya700.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载完压缩包之后，找到下载的位置，然后就要介绍Termius的&lt;a href=&#34;https://cloud.tencent.com/developer/article/1506251#:~:text=%E4%BB%80%E4%B9%88%E6%98%AFSFTP%EF%BC%9F,SFTP%E6%98%AF%E4%B8%80%E7%A7%8D%E5%AE%89%E5%85%A8%E7%9A%84%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE%EF%BC%8C%E4%B8%80%E7%A7%8D%E9%80%9A%E8%BF%87%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6%E7%9A%84%E5%AE%89%E5%85%A8%E6%96%B9%E6%B3%95%EF%BC%9B%E5%AE%83%E7%A1%AE%E4%BF%9D%E4%BD%BF%E7%94%A8%E7%A7%81%E6%9C%89%E5%92%8C%E5%AE%89%E5%85%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E6%B5%81%E6%9D%A5%E5%AE%89%E5%85%A8%E5%9C%B0%E4%BC%A0%E8%BE%93%E6%95%B0%E6%8D%AE%E3%80%82%20SFTP%E8%A6%81%E6%B1%82%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%94%A8%E6%88%B7%E5%BF%85%E9%A1%BB%E7%94%B1%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%EF%BC%8C%E5%B9%B6%E4%B8%94%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E5%BF%85%E9%A1%BB%E9%80%9A%E8%BF%87%E5%AE%89%E5%85%A8%E9%80%9A%E9%81%93%EF%BC%88SSH%EF%BC%89%E8%BF%9B%E8%A1%8C%EF%BC%8C%E5%8D%B3%E4%B8%8D%E4%BC%A0%E8%BE%93%E6%98%8E%E6%96%87%E5%AF%86%E7%A0%81%E6%88%96%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E3%80%82&#34;&gt;SFTP&lt;/a&gt;功能&lt;/p&gt;
&lt;p&gt;​	选中你的服务器&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.6fubf7xwqu80.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​		先找到你本地压缩包的网址，选中你本地的压缩包，直接拖到服务器上就行（哎，真不错，我就是玩儿）&lt;/p&gt;
&lt;p&gt;![GIF 2021-6-10 16-34-08](&lt;a href=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/GIF&#34;&gt;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/GIF&lt;/a&gt; 2021-6-10 16-34-08.1n12dp0c16ow.gif)&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;传过去之后现在你可以到你的服务器中ls -a一下，看看它在不在&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.2e00phmhdyck.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;那么以上就是下载的全部内容了&lt;/p&gt;
&lt;h4 id=&#34;2---解压安装试运行运行部分可以先不弄下一步的更好用&#34;&gt;2 - 解压安装试运行（运行部分可以先不弄，下一步的更好用）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;解压&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-linux&#34; data-lang=&#34;linux&#34;&gt;tar -xvzf code-server-3.10.2-linux-amd64.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;可以改个名&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-linux&#34; data-lang=&#34;linux&#34;&gt;mv code-server-3.10.2-linux-amd64 code-server
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;运行试下（建议先看下参数列表）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PS：得确保你开了9999端口，下面是我的服务器防火墙配置&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为啥不用8080端口？&lt;a href=&#34;https://baike.baidu.com/item/8080%E7%AB%AF%E5%8F%A3#:~:text=8080%E7%AB%AF%E5%8F%A3%E6%98%AF%E8%A2%AB%E7%94%A8%E4%BA%8EWWW%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E7%9A%84%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%E7%BD%91%E9%A1%B5%E6%B5%8F%E8%A7%88%EF%BC%8C%E7%BB%8F%E5%B8%B8%E5%9C%A8%E8%AE%BF%E9%97%AE%E6%9F%90%E4%B8%AA%E7%BD%91%E7%AB%99%E6%88%96%E4%BD%BF%E7%94%A8%20%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E4%BC%9A%E5%8A%A0%E4%B8%8A%E2%80%9C%3A8080%E2%80%9D%20%E7%AB%AF%E5%8F%A3%E5%8F%B7,%E3%80%82%20%E5%8F%A6%E5%A4%96Apache%20Tomcat%20web%20server%E5%AE%89%E8%A3%85%E5%90%8E%EF%BC%8C%E9%BB%98%E8%AE%A4%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8F%A3%E5%B0%B1%E6%98%AF8080%E3%80%82&#34;&gt;戳这&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.174au3x9jk80.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.7jcmo9u92lw0.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-linux&#34; data-lang=&#34;linux&#34;&gt;cd code-server
export PASSWORD=&amp;quot;你想设置的密码&amp;quot;
./code-server --port 9999 --host 0.0.0.0 --auth password
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;–port 9999 指定端口，缺省时为 8080&lt;/li&gt;
&lt;li&gt;–host 0.0.0.0 允许公网访问，缺省时为 127.0.0.1，只能本地访问&lt;/li&gt;
&lt;li&gt;–auth password 指定访问密码，可通过 export 命令设置，参数为 none 时不启用密码&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;可以看一下参数列表&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-linux&#34; data-lang=&#34;linux&#34;&gt;./code-server --help
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.277j7h3h4x8g.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行后，打开 Chrome 访问“服务器公网IP:端口”，效果图：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;服务器公网IP去哪里查？  &lt;a href=&#34;https://blog.csdn.net/weixin_44226789/article/details/106396968&#34;&gt;戳这&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image-20210610164853020.4s0pnj2dndo0.png&#34; alt=&#34;image-20210610164853020&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;三高级配置&#34;&gt;（三）高级配置&lt;/h2&gt;
&lt;p&gt;​		我们都知道Linux是可以写shell脚本的，那么为了简化以上操作，也为了让其根据我们意愿后台运行或者终止，我们着手写两个脚本，start.sh和shut.sh(脚本是要写在code-server目录的奥)&lt;/p&gt;
&lt;p&gt;脚本执行目标&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;start.sh&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开启code-server，后台运行该进程&lt;/li&gt;
&lt;li&gt;记录当前进程的PID，也专门记录一个日志log文件便于以后查看&lt;/li&gt;
&lt;li&gt;将PID存到文件里面&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;#start.sh
export PASSWORD=&amp;quot;412523&amp;quot;
nohup ./code-server --port 9999 --host 0.0.0.0 --auth password &amp;gt; test.log 2&amp;gt;&amp;amp;1 &amp;amp;
echo $! &amp;gt; save_pid.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;shut.sh&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读文件中的PID&lt;/li&gt;
&lt;li&gt;杀死进程&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;#shut.sh
kill -9 &#39;cat save_pid.txt&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;四ios端ipados端的最佳使用方式&#34;&gt;（四）Ios端/IpadOS端的最佳使用方式&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;本来配置完以上，我们用任何设备，只要用浏览器就可以使用了，但是Ios端和IpadOS端有一个可以更加沉浸体验的软件，推荐给大家&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.41hexmd78n80.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以下是使用方法：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.yi50np44r80.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.jwjdy8ewin4.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.1as8qmxwh0g0.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;选好点&lt;strong&gt;Save&lt;/strong&gt;就可以了，访问效果就如第一步运行效果的图&lt;/p&gt;
&lt;h2 id=&#34;五使用流程总结&#34;&gt;（五）使用流程总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SSH登入服务器&lt;/li&gt;
&lt;li&gt;cd code-server&lt;/li&gt;
&lt;li&gt;./start.sh&lt;/li&gt;
&lt;li&gt;浏览器直接访问网址/Apple系列产品的serveditor&lt;/li&gt;
&lt;li&gt;关了，免得一直占用我的服务器：./shut.sh&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;六参考资料&#34;&gt;（六）参考资料&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/liteng607/article/details/106601569?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161529894516780269818215%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;amp;request_id=161529894516780269818215&amp;amp;biz_id=0&amp;amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-106601569.first_rank_v2_pc_rank_v29&amp;amp;utm_term=ipad+Vscode&#34;&gt;在Ipad上使用Vscode&lt;/a&gt;&lt;/p&gt;
</content:encoded>
        <dc:creator>Calvin Haynes</dc:creator>
        
        
        
        
          
            
              <category>Vscode</category>
            
          
        
        
            
              <category>geek-tools</category>
            
        
        
      </item>
      
      <item>
        <title>Hugo搭建个人博客教程（GithubPages &#43; 阿里云）</title>
        <link>https://blog.calvinhaynes.top/posts/hugo/</link>
        <pubDate>Thu, 05 Aug 2021 00:22:49 +0800</pubDate>
        <author>chx1006488386@163.com (Calvin Haynes)</author>
        <atom:modified>Thu, 05 Aug 2021 00:22:49 +0800</atom:modified>
        <guid>https://blog.calvinhaynes.top/posts/hugo/</guid>
        <description>前言 经过种种尝试，还是决定选择了Hugo作为了搭建个人博客的框架，Hugo是目前可以搭建个人博客的框架中部署最快的，而且坑也相对很少，不过还</description>
        <content:encoded>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;经过种种尝试，还是决定选择了Hugo作为了搭建个人博客的框架，Hugo是目前可以搭建个人博客的框架中部署最快的，而且坑也相对很少，不过还是有的，近几天折腾了不少东西，也终于算是初步搭建完了Hugo+Zoo主题的&lt;a href=&#34;https://blog.calvinhaynes.top/&#34;&gt;个人博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在本文中我会讲解部署的详细过程，也会科普一些部署中的原理，毕竟我也刚刚接触，所以有些说的不对的地方也希望评论区的大佬来勘误，谢谢啦。&lt;/p&gt;
&lt;p&gt;如果遇到部署问题，欢迎在评论区打出你的问题，我和知乎这个优秀社区的所有人都有可能回答你的疑问哦，本文如果对你有帮助的话，还希望多多点赞收藏转发，谢谢啦。&lt;/p&gt;
&lt;h2 id=&#34;1---使用hugo创建静态网站实战&#34;&gt;1 - 使用Hugo创建静态网站实战&lt;/h2&gt;
&lt;h4 id=&#34;1安装hugo&#34;&gt;1、安装Hugo&lt;/h4&gt;
&lt;p&gt;博主用的是Windows系统，所以安装过程中我会基于Windows进行讲解，有关其他操作系统的安装方法可以参考官方的&lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34;&gt;文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows下的Hugo安装我推荐使用chocolatey包管理器进行安装，接触过Linux的朋友们都知道，Linux的各种包管理器，利用命令行就可以实现包的更新，删除等操作，Windows下也有类似的包管理器就是chocolatey了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装过程详解&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安装chocolatey包管理器：在&lt;a href=&#34;https://chocolatey.org/&#34;&gt;官网&lt;/a&gt;点击 &lt;code&gt;Install Now&lt;/code&gt; 即可下载&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命令行中敲入&lt;code&gt;choco --version&lt;/code&gt;，如果显示版本号证明你的 chocolatey 已经安装完毕，如果有误请检查环境变量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命令行中安装hugo：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;choco install hugo -confirm
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;安装hugo-extended（扩展版本）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;choco install hugo-extended -confirm
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查hugo是否安装成功：命令行中敲入&lt;code&gt;hugo version&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2初步建站实战利用githubpages进行部署&#34;&gt;2、初步建站实战（利用GithubPages进行部署）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;在Github中建立一个仓库，仓库名为&lt;code&gt;用户名.github.io&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.1l0hxny3q7b4.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将仓库clone到本地一个你想存放网站文件的文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git clone &amp;lt;YOUR-REPOSITORY_URL&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;创建网站：在存放你博客的根目录 &amp;lt;YOUR-REPOSITORY_URL&amp;gt; 中敲入以下命令&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;//注意site后面是一个点，不能忽略啊，.代表当前目录
hugo new site .
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;添加主题（以我博客的主题Zzo为例子）：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git init
git submodule add https://github.com/zzossig/hugo-theme-zzo.git themes/zzo
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;把 themes/zzo 下的 exampleSite文件夹的内容复制到你博客的根目录&lt;/li&gt;
&lt;li&gt;在博客根目录中敲命令：（启动hugo服务器）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;点击&lt;a href=&#34;http://localhost:1313/&#34;&gt;这里&lt;/a&gt;查看测试（主题和示例网站中的markdown博客都正确显示了）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3githubpages服务--云托管&#34;&gt;3、GithubPages服务 + 云托管&lt;/h4&gt;
&lt;h5 id=&#34;1---配置githubpages服务进行个人博客的部署使得所有人都可以访问你的博客站&#34;&gt;1 - 配置GithubPages服务进行个人博客的部署，使得所有人都可以访问你的博客站&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;在 config.toml 文件中设置 baseURL 为 Github Pages 服务的域名（用户名.github.io）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;c&#34;&gt;#config/config.toml&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;baseURL&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://blog.calvinhaynes.top/&amp;#34;&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;#未设置阿里云托管之前应该是 &amp;#34;https://用户名.github.io&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Calvin Haynes&amp;#39;s Blog&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;zzo&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;将更改过后的 github 仓库文件夹（就是你的博客根目录）推送到远端&lt;/li&gt;
&lt;li&gt;在Github上设置GithubPages服务的一些参数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.1ssfj1nz0jkw.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;（Ps：有关 Custom domain 在以下的云托管中进行解释）&lt;/p&gt;
&lt;h5 id=&#34;2---云托管阿里云&#34;&gt;2 - 云托管（阿里云）&lt;/h5&gt;
&lt;p&gt;​		博主买了阿里云的学生机，一个1核2GB内存的轻量应用服务器，所以将博客站云托管在这个服务器上，以下就是基于阿里云的教程，其他服务器也都差不太多，可以自行google，有关阿里云服务器购买和初步配置自行到官网查看文档吧。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拥有一个阿里云服务器还不够，你需要&lt;a href=&#34;https://wanwang.aliyun.com/?spm=5176.19720258.J_8058803260.53.55d32c4axFU59f&#34;&gt;购买注册&lt;/a&gt;一个你自己的专属域名。&lt;/li&gt;
&lt;li&gt;拥有自己的专属域名之后，进入域名解析的&lt;a href=&#34;https://dns.console.aliyun.com/?spm=5176.12818093.ProductAndService--ali--widget-home-product-recent.dre0.5adc16d05LdZIH#/dns/domainList&#34;&gt;工作台&lt;/a&gt;，就可以看见你的域名了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.7jhy38mugak0.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解析设置：（点击修改后各种参数的设置都有相关说明，其他问题也都可以在阿里云官网找到文档解释）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.37z6o0rdyam0.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.5faxpze1aqc0.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器绑定域名：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.5u53qpc5aao0.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.3992hz7hv360.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解析设置完后在你的博客根目录中的 static （静态文件存放的地方）中创建一个 CNMAE 文件（注意没有任何后缀）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.q0epou32e1s.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CNAME 文件中写入你设置的域名，我的就是 &lt;a href=&#34;https://blog.calvinhaynes.top/&#34;&gt;blog.calvinhaynes.top&lt;/a&gt; ，写完记得更新github库（CNAME文件就是给你这个Github库绑定域名用的，CNAME的全名就是 Canonical Name，意思是别名）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后更改 Github pages 配置中的 Custom domain 为你设置的新域名就好咯&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/CalvinHaynes/ImageHub@main/BlogImage/image.1ssfj1nz0jkw.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;现在就可以输入你设置的域名进行访问咯，阿里云服务器在中国，所以访问速度快的一批！！！（别忘了config.toml文件的baseURL参数设置）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2---主题参数设置和个性化&#34;&gt;2 - 主题参数设置和个性化&lt;/h2&gt;
&lt;p&gt;​	这部分主要是看主题作者写的详细文档进行自己的设计，在Hugo官网中找到的比较热门的主题的Github库中都有相关的文档，建议小伙伴们自行查看学习，每个主题都有不同之处，我使用的是Zzo主题，它的官方文档在&lt;a href=&#34;https://zzo-docs.vercel.app/&#34;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​	我的Github仓库在&lt;a href=&#34;https://github.com/CalvinHaynes/CalvinHaynes.github.io&#34;&gt;这里&lt;/a&gt;，欢迎 fork 和查看配置文件&lt;/p&gt;
&lt;h2 id=&#34;3---资源整理一些有用的文档&#34;&gt;3 - 资源整理（一些有用的文档）&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://zzo-docs.vercel.app/&#34;&gt;Zzo主题官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://help.aliyun.com/product/29697.html?spm=a2c4g.11186623.6.540.d0044e82AEgtJN&#34;&gt;阿里云云解析DNS文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/content-management/front-matter/&#34;&gt;hugo文章的front matter&lt;/a&gt;&lt;/p&gt;
</content:encoded>
        <dc:creator>Calvin Haynes</dc:creator>
        
        
        
        
          
            
              <category>hugo实战基础</category>
            
          
        
        
            
              <category>hugo</category>
            
        
        
      </item>
      

    
  </channel>
</rss>
